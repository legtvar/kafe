stages:
  - deploy
  - build
  - test

build-api:
  image: mcr.microsoft.com/dotnet/sdk:8.0-alpine
  stage: build
  variables:
    NUGET_PACKAGES: $CI_PROJECT_DIR/.nuget
  script:
    - dotnet build Kafe.sln
  tags:
    - shared-fi
  cache:
    paths:
      - .nuget/
  rules:
    - if: $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == $CI_DEFAULT_BRANCH

test-api:
  image: mcr.microsoft.com/dotnet/sdk:8.0-alpine
  stage: test
  variables:
    POSTGRES_DB: kafe
    POSTGRES_USER: postgres
    POSTGRES_PASSWORD: postgres
    POSTGRES_HOST_AUTH_METHOD: trust
  services:
    - postgres
  tags:
    - shared-fi
  rules:
    - if: $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == $CI_DEFAULT_BRANCH
  artifacts:
    when: always
    expire_in: 42 s
    paths:
      - ./**/*test-result.xml
    reports:
      junit:
        - ./**/*test-result.xml
  script:
    - apk update && apk add ffmpeg jq
    - jq
      --arg postgres "host=postgres;database=postgres;password=postgres;username=postgres;Include Error Detail=true"
      --arg kafe "host=postgres;database=kafe;password=postgres;username=postgres;Include Error Detail=true"
      '.ConnectionStrings.postgres=$postgres | .ConnectionStrings.KAFE=$kafe'
      ./Api/appsettings.local.json> ./Api/appsettings.local.json
    - dotnet test Tests
      --logger:"junit;LogFilePath=./artifacts/{assembly}-test-result.xml;MethodFormat=Class;FailureBodyFormat=Verbose"

build-web:
  image: alpine:latest
  stage: build
  variables:
    CI: ''
  script:
    - apk update
    - apk add nodejs-current npm
    - corepack enable && corepack prepare pnpm@latest --activate

    - cd Web
    - pnpm config set store-dir .pnpm-store/
    - pnpm i
    - pnpm run build
  tags:
    - shared-fi
  cache:
    paths:
      - Web/.pnpm-store/
  rules:
    - if: $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == $CI_DEFAULT_BRANCH

deploy-production:
  stage: deploy
  script:
    - cp "$APPSETTINGS_PRODUCTION" "./Api/appsettings.local.json"
    - docker compose -f docker-compose.base.yml -f docker-compose.production.yml build
    - docker compose -f docker-compose.base.yml -f docker-compose.production.yml down
    - docker compose -f docker-compose.base.yml -f docker-compose.production.yml up -d
  tags:
    - mlejnek
  resource_group: mlejnek
  environment:
    name: production
    url: https://kafe.fi.muni.cz
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
      when: manual

deploy-staging:
  stage: deploy
  script:
    - cp "$APPSETTINGS_STAGE" "./Api/appsettings.local.json"
    - docker compose -f docker-compose.base.yml -f docker-compose.staging.yml build
    - docker compose -f docker-compose.base.yml -f docker-compose.staging.yml down
    - docker compose -f docker-compose.base.yml -f docker-compose.staging.yml up -d
  tags:
    - mlejnek
  resource_group: mlejnek
  environment:
    name: staging
    url: https://kafe-stage.fi.muni.cz
  when: manual

deploy-games:
  stage: deploy
  script:
    - docker compose -f docker-compose.games.yml build
    - docker compose -f docker-compose.games.yml down
    - docker compose -f docker-compose.games.yml up -d 
  tags:
    - mlejnek
  environment:
    name: games
    url: https://games.muni.cz
  when: manual
